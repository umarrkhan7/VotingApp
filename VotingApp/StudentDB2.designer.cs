#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VotingApp
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="StudentDB2")]
	public partial class StudentDB2DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertregisteration(registeration instance);
    partial void Updateregisteration(registeration instance);
    partial void Deleteregisteration(registeration instance);
    partial void InsertCandidate(Candidate instance);
    partial void UpdateCandidate(Candidate instance);
    partial void DeleteCandidate(Candidate instance);
    partial void Insertstudent(student instance);
    partial void Updatestudent(student instance);
    partial void Deletestudent(student instance);
    partial void InsertWinner(Winner instance);
    partial void UpdateWinner(Winner instance);
    partial void DeleteWinner(Winner instance);
    partial void InsertFeedback2(Feedback2 instance);
    partial void UpdateFeedback2(Feedback2 instance);
    partial void DeleteFeedback2(Feedback2 instance);
    partial void InsertUpcomingElection(UpcomingElection instance);
    partial void UpdateUpcomingElection(UpcomingElection instance);
    partial void DeleteUpcomingElection(UpcomingElection instance);
    partial void InsertUpcomingElectionspk44(UpcomingElectionspk44 instance);
    partial void UpdateUpcomingElectionspk44(UpcomingElectionspk44 instance);
    partial void DeleteUpcomingElectionspk44(UpcomingElectionspk44 instance);
    #endregion
		
		public StudentDB2DataContext() : 
				base(global::VotingApp.Properties.Settings.Default.StudentDB2ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public StudentDB2DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StudentDB2DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StudentDB2DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StudentDB2DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<registeration> registerations
		{
			get
			{
				return this.GetTable<registeration>();
			}
		}
		
		public System.Data.Linq.Table<Candidate> Candidates
		{
			get
			{
				return this.GetTable<Candidate>();
			}
		}
		
		public System.Data.Linq.Table<student> students
		{
			get
			{
				return this.GetTable<student>();
			}
		}
		
		public System.Data.Linq.Table<Winner> Winners
		{
			get
			{
				return this.GetTable<Winner>();
			}
		}
		
		public System.Data.Linq.Table<Feedback2> Feedback2s
		{
			get
			{
				return this.GetTable<Feedback2>();
			}
		}
		
		public System.Data.Linq.Table<UpcomingElection> UpcomingElections
		{
			get
			{
				return this.GetTable<UpcomingElection>();
			}
		}
		
		public System.Data.Linq.Table<UpcomingElectionspk44> UpcomingElectionspk44s
		{
			get
			{
				return this.GetTable<UpcomingElectionspk44>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.registerations")]
	public partial class registeration : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _name;
		
		private int _age;
		
		private string _cnic;
		
		private string _password;
		
		private EntitySet<student> _students;
		
		private EntitySet<Feedback2> _Feedback2s;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnageChanging(int value);
    partial void OnageChanged();
    partial void OncnicChanging(string value);
    partial void OncnicChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    #endregion
		
		public registeration()
		{
			this._students = new EntitySet<student>(new Action<student>(this.attach_students), new Action<student>(this.detach_students));
			this._Feedback2s = new EntitySet<Feedback2>(new Action<Feedback2>(this.attach_Feedback2s), new Action<Feedback2>(this.detach_Feedback2s));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_age", DbType="Int NOT NULL")]
		public int age
		{
			get
			{
				return this._age;
			}
			set
			{
				if ((this._age != value))
				{
					this.OnageChanging(value);
					this.SendPropertyChanging();
					this._age = value;
					this.SendPropertyChanged("age");
					this.OnageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cnic", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string cnic
		{
			get
			{
				return this._cnic;
			}
			set
			{
				if ((this._cnic != value))
				{
					this.OncnicChanging(value);
					this.SendPropertyChanging();
					this._cnic = value;
					this.SendPropertyChanged("cnic");
					this.OncnicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="registeration_student", Storage="_students", ThisKey="Id", OtherKey="Id")]
		public EntitySet<student> students
		{
			get
			{
				return this._students;
			}
			set
			{
				this._students.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="registeration_Feedback2", Storage="_Feedback2s", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<Feedback2> Feedback2s
		{
			get
			{
				return this._Feedback2s;
			}
			set
			{
				this._Feedback2s.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_students(student entity)
		{
			this.SendPropertyChanging();
			entity.registeration = this;
		}
		
		private void detach_students(student entity)
		{
			this.SendPropertyChanging();
			entity.registeration = null;
		}
		
		private void attach_Feedback2s(Feedback2 entity)
		{
			this.SendPropertyChanging();
			entity.registeration = this;
		}
		
		private void detach_Feedback2s(Feedback2 entity)
		{
			this.SendPropertyChanging();
			entity.registeration = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Candidates")]
	public partial class Candidate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CandidateId;
		
		private string _Name;
		
		private string _Age;
		
		private string _Party;
		
		private string _VotingSign;
		
		private EntitySet<student> _students;
		
		private EntitySet<Winner> _Winners;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCandidateIdChanging(int value);
    partial void OnCandidateIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAgeChanging(string value);
    partial void OnAgeChanged();
    partial void OnPartyChanging(string value);
    partial void OnPartyChanged();
    partial void OnVotingSignChanging(string value);
    partial void OnVotingSignChanged();
    #endregion
		
		public Candidate()
		{
			this._students = new EntitySet<student>(new Action<student>(this.attach_students), new Action<student>(this.detach_students));
			this._Winners = new EntitySet<Winner>(new Action<Winner>(this.attach_Winners), new Action<Winner>(this.detach_Winners));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CandidateId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CandidateId
		{
			get
			{
				return this._CandidateId;
			}
			set
			{
				if ((this._CandidateId != value))
				{
					this.OnCandidateIdChanging(value);
					this.SendPropertyChanging();
					this._CandidateId = value;
					this.SendPropertyChanged("CandidateId");
					this.OnCandidateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Age", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Age
		{
			get
			{
				return this._Age;
			}
			set
			{
				if ((this._Age != value))
				{
					this.OnAgeChanging(value);
					this.SendPropertyChanging();
					this._Age = value;
					this.SendPropertyChanged("Age");
					this.OnAgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Party", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Party
		{
			get
			{
				return this._Party;
			}
			set
			{
				if ((this._Party != value))
				{
					this.OnPartyChanging(value);
					this.SendPropertyChanging();
					this._Party = value;
					this.SendPropertyChanged("Party");
					this.OnPartyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VotingSign", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string VotingSign
		{
			get
			{
				return this._VotingSign;
			}
			set
			{
				if ((this._VotingSign != value))
				{
					this.OnVotingSignChanging(value);
					this.SendPropertyChanging();
					this._VotingSign = value;
					this.SendPropertyChanged("VotingSign");
					this.OnVotingSignChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Candidate_student", Storage="_students", ThisKey="CandidateId", OtherKey="CandidateId")]
		public EntitySet<student> students
		{
			get
			{
				return this._students;
			}
			set
			{
				this._students.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Candidate_Winner", Storage="_Winners", ThisKey="CandidateId", OtherKey="CandidateId")]
		public EntitySet<Winner> Winners
		{
			get
			{
				return this._Winners;
			}
			set
			{
				this._Winners.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_students(student entity)
		{
			this.SendPropertyChanging();
			entity.Candidate = this;
		}
		
		private void detach_students(student entity)
		{
			this.SendPropertyChanging();
			entity.Candidate = null;
		}
		
		private void attach_Winners(Winner entity)
		{
			this.SendPropertyChanging();
			entity.Candidate = this;
		}
		
		private void detach_Winners(Winner entity)
		{
			this.SendPropertyChanging();
			entity.Candidate = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.students")]
	public partial class student : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VoteId;
		
		private int _Id;
		
		private int _CandidateId;
		
		private System.DateTime _VotingTime;
		
		private string _CandidateName;
		
		private EntityRef<Candidate> _Candidate;
		
		private EntityRef<registeration> _registeration;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVoteIdChanging(int value);
    partial void OnVoteIdChanged();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCandidateIdChanging(int value);
    partial void OnCandidateIdChanged();
    partial void OnVotingTimeChanging(System.DateTime value);
    partial void OnVotingTimeChanged();
    partial void OnCandidateNameChanging(string value);
    partial void OnCandidateNameChanged();
    #endregion
		
		public student()
		{
			this._Candidate = default(EntityRef<Candidate>);
			this._registeration = default(EntityRef<registeration>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoteId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VoteId
		{
			get
			{
				return this._VoteId;
			}
			set
			{
				if ((this._VoteId != value))
				{
					this.OnVoteIdChanging(value);
					this.SendPropertyChanging();
					this._VoteId = value;
					this.SendPropertyChanged("VoteId");
					this.OnVoteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if (this._registeration.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CandidateId", DbType="Int NOT NULL")]
		public int CandidateId
		{
			get
			{
				return this._CandidateId;
			}
			set
			{
				if ((this._CandidateId != value))
				{
					if (this._Candidate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCandidateIdChanging(value);
					this.SendPropertyChanging();
					this._CandidateId = value;
					this.SendPropertyChanged("CandidateId");
					this.OnCandidateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VotingTime", DbType="DateTime NOT NULL")]
		public System.DateTime VotingTime
		{
			get
			{
				return this._VotingTime;
			}
			set
			{
				if ((this._VotingTime != value))
				{
					this.OnVotingTimeChanging(value);
					this.SendPropertyChanging();
					this._VotingTime = value;
					this.SendPropertyChanged("VotingTime");
					this.OnVotingTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CandidateName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string CandidateName
		{
			get
			{
				return this._CandidateName;
			}
			set
			{
				if ((this._CandidateName != value))
				{
					this.OnCandidateNameChanging(value);
					this.SendPropertyChanging();
					this._CandidateName = value;
					this.SendPropertyChanged("CandidateName");
					this.OnCandidateNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Candidate_student", Storage="_Candidate", ThisKey="CandidateId", OtherKey="CandidateId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Candidate Candidate
		{
			get
			{
				return this._Candidate.Entity;
			}
			set
			{
				Candidate previousValue = this._Candidate.Entity;
				if (((previousValue != value) 
							|| (this._Candidate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Candidate.Entity = null;
						previousValue.students.Remove(this);
					}
					this._Candidate.Entity = value;
					if ((value != null))
					{
						value.students.Add(this);
						this._CandidateId = value.CandidateId;
					}
					else
					{
						this._CandidateId = default(int);
					}
					this.SendPropertyChanged("Candidate");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="registeration_student", Storage="_registeration", ThisKey="Id", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public registeration registeration
		{
			get
			{
				return this._registeration.Entity;
			}
			set
			{
				registeration previousValue = this._registeration.Entity;
				if (((previousValue != value) 
							|| (this._registeration.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._registeration.Entity = null;
						previousValue.students.Remove(this);
					}
					this._registeration.Entity = value;
					if ((value != null))
					{
						value.students.Add(this);
						this._Id = value.Id;
					}
					else
					{
						this._Id = default(int);
					}
					this.SendPropertyChanged("registeration");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Winners")]
	public partial class Winner : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _WinnerId;
		
		private int _CandidateId;
		
		private string _CandidateName;
		
		private int _VoteCount;
		
		private System.DateTime _ElectionDate;
		
		private EntityRef<Candidate> _Candidate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWinnerIdChanging(int value);
    partial void OnWinnerIdChanged();
    partial void OnCandidateIdChanging(int value);
    partial void OnCandidateIdChanged();
    partial void OnCandidateNameChanging(string value);
    partial void OnCandidateNameChanged();
    partial void OnVoteCountChanging(int value);
    partial void OnVoteCountChanged();
    partial void OnElectionDateChanging(System.DateTime value);
    partial void OnElectionDateChanged();
    #endregion
		
		public Winner()
		{
			this._Candidate = default(EntityRef<Candidate>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WinnerId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int WinnerId
		{
			get
			{
				return this._WinnerId;
			}
			set
			{
				if ((this._WinnerId != value))
				{
					this.OnWinnerIdChanging(value);
					this.SendPropertyChanging();
					this._WinnerId = value;
					this.SendPropertyChanged("WinnerId");
					this.OnWinnerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CandidateId", DbType="Int NOT NULL")]
		public int CandidateId
		{
			get
			{
				return this._CandidateId;
			}
			set
			{
				if ((this._CandidateId != value))
				{
					if (this._Candidate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCandidateIdChanging(value);
					this.SendPropertyChanging();
					this._CandidateId = value;
					this.SendPropertyChanged("CandidateId");
					this.OnCandidateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CandidateName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string CandidateName
		{
			get
			{
				return this._CandidateName;
			}
			set
			{
				if ((this._CandidateName != value))
				{
					this.OnCandidateNameChanging(value);
					this.SendPropertyChanging();
					this._CandidateName = value;
					this.SendPropertyChanged("CandidateName");
					this.OnCandidateNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoteCount", DbType="Int NOT NULL")]
		public int VoteCount
		{
			get
			{
				return this._VoteCount;
			}
			set
			{
				if ((this._VoteCount != value))
				{
					this.OnVoteCountChanging(value);
					this.SendPropertyChanging();
					this._VoteCount = value;
					this.SendPropertyChanged("VoteCount");
					this.OnVoteCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ElectionDate", DbType="DateTime NOT NULL")]
		public System.DateTime ElectionDate
		{
			get
			{
				return this._ElectionDate;
			}
			set
			{
				if ((this._ElectionDate != value))
				{
					this.OnElectionDateChanging(value);
					this.SendPropertyChanging();
					this._ElectionDate = value;
					this.SendPropertyChanged("ElectionDate");
					this.OnElectionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Candidate_Winner", Storage="_Candidate", ThisKey="CandidateId", OtherKey="CandidateId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Candidate Candidate
		{
			get
			{
				return this._Candidate.Entity;
			}
			set
			{
				Candidate previousValue = this._Candidate.Entity;
				if (((previousValue != value) 
							|| (this._Candidate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Candidate.Entity = null;
						previousValue.Winners.Remove(this);
					}
					this._Candidate.Entity = value;
					if ((value != null))
					{
						value.Winners.Add(this);
						this._CandidateId = value.CandidateId;
					}
					else
					{
						this._CandidateId = default(int);
					}
					this.SendPropertyChanged("Candidate");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Feedback2")]
	public partial class Feedback2 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FeedbackId;
		
		private int _UserId;
		
		private string _UserName;
		
		private string _FeedbackText;
		
		private System.DateTime _TimeSubmitted;
		
		private EntityRef<registeration> _registeration;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFeedbackIdChanging(int value);
    partial void OnFeedbackIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnFeedbackTextChanging(string value);
    partial void OnFeedbackTextChanged();
    partial void OnTimeSubmittedChanging(System.DateTime value);
    partial void OnTimeSubmittedChanged();
    #endregion
		
		public Feedback2()
		{
			this._registeration = default(EntityRef<registeration>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeedbackId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FeedbackId
		{
			get
			{
				return this._FeedbackId;
			}
			set
			{
				if ((this._FeedbackId != value))
				{
					this.OnFeedbackIdChanging(value);
					this.SendPropertyChanging();
					this._FeedbackId = value;
					this.SendPropertyChanged("FeedbackId");
					this.OnFeedbackIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._registeration.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeedbackText", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string FeedbackText
		{
			get
			{
				return this._FeedbackText;
			}
			set
			{
				if ((this._FeedbackText != value))
				{
					this.OnFeedbackTextChanging(value);
					this.SendPropertyChanging();
					this._FeedbackText = value;
					this.SendPropertyChanged("FeedbackText");
					this.OnFeedbackTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeSubmitted", DbType="DateTime NOT NULL")]
		public System.DateTime TimeSubmitted
		{
			get
			{
				return this._TimeSubmitted;
			}
			set
			{
				if ((this._TimeSubmitted != value))
				{
					this.OnTimeSubmittedChanging(value);
					this.SendPropertyChanging();
					this._TimeSubmitted = value;
					this.SendPropertyChanged("TimeSubmitted");
					this.OnTimeSubmittedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="registeration_Feedback2", Storage="_registeration", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public registeration registeration
		{
			get
			{
				return this._registeration.Entity;
			}
			set
			{
				registeration previousValue = this._registeration.Entity;
				if (((previousValue != value) 
							|| (this._registeration.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._registeration.Entity = null;
						previousValue.Feedback2s.Remove(this);
					}
					this._registeration.Entity = value;
					if ((value != null))
					{
						value.Feedback2s.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("registeration");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UpcomingElections")]
	public partial class UpcomingElection : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _CandidateName;
		
		private int _Age;
		
		private System.DateTime _VotingTime;
		
		private string _Party;
		
		private string _VotingSign;
		
		private string _Address;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCandidateNameChanging(string value);
    partial void OnCandidateNameChanged();
    partial void OnAgeChanging(int value);
    partial void OnAgeChanged();
    partial void OnVotingTimeChanging(System.DateTime value);
    partial void OnVotingTimeChanged();
    partial void OnPartyChanging(string value);
    partial void OnPartyChanged();
    partial void OnVotingSignChanging(string value);
    partial void OnVotingSignChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    #endregion
		
		public UpcomingElection()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CandidateName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string CandidateName
		{
			get
			{
				return this._CandidateName;
			}
			set
			{
				if ((this._CandidateName != value))
				{
					this.OnCandidateNameChanging(value);
					this.SendPropertyChanging();
					this._CandidateName = value;
					this.SendPropertyChanged("CandidateName");
					this.OnCandidateNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Age", DbType="Int NOT NULL")]
		public int Age
		{
			get
			{
				return this._Age;
			}
			set
			{
				if ((this._Age != value))
				{
					this.OnAgeChanging(value);
					this.SendPropertyChanging();
					this._Age = value;
					this.SendPropertyChanged("Age");
					this.OnAgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VotingTime", DbType="DateTime NOT NULL")]
		public System.DateTime VotingTime
		{
			get
			{
				return this._VotingTime;
			}
			set
			{
				if ((this._VotingTime != value))
				{
					this.OnVotingTimeChanging(value);
					this.SendPropertyChanging();
					this._VotingTime = value;
					this.SendPropertyChanged("VotingTime");
					this.OnVotingTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Party", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Party
		{
			get
			{
				return this._Party;
			}
			set
			{
				if ((this._Party != value))
				{
					this.OnPartyChanging(value);
					this.SendPropertyChanging();
					this._Party = value;
					this.SendPropertyChanged("Party");
					this.OnPartyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VotingSign", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string VotingSign
		{
			get
			{
				return this._VotingSign;
			}
			set
			{
				if ((this._VotingSign != value))
				{
					this.OnVotingSignChanging(value);
					this.SendPropertyChanging();
					this._VotingSign = value;
					this.SendPropertyChanged("VotingSign");
					this.OnVotingSignChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UpcomingElectionspk44")]
	public partial class UpcomingElectionspk44 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _CandidateName;
		
		private int _Age;
		
		private System.DateTime _VotingTime;
		
		private string _Party;
		
		private string _VotingSign;
		
		private string _Address;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCandidateNameChanging(string value);
    partial void OnCandidateNameChanged();
    partial void OnAgeChanging(int value);
    partial void OnAgeChanged();
    partial void OnVotingTimeChanging(System.DateTime value);
    partial void OnVotingTimeChanged();
    partial void OnPartyChanging(string value);
    partial void OnPartyChanged();
    partial void OnVotingSignChanging(string value);
    partial void OnVotingSignChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    #endregion
		
		public UpcomingElectionspk44()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CandidateName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string CandidateName
		{
			get
			{
				return this._CandidateName;
			}
			set
			{
				if ((this._CandidateName != value))
				{
					this.OnCandidateNameChanging(value);
					this.SendPropertyChanging();
					this._CandidateName = value;
					this.SendPropertyChanged("CandidateName");
					this.OnCandidateNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Age", DbType="Int NOT NULL")]
		public int Age
		{
			get
			{
				return this._Age;
			}
			set
			{
				if ((this._Age != value))
				{
					this.OnAgeChanging(value);
					this.SendPropertyChanging();
					this._Age = value;
					this.SendPropertyChanged("Age");
					this.OnAgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VotingTime", DbType="DateTime NOT NULL")]
		public System.DateTime VotingTime
		{
			get
			{
				return this._VotingTime;
			}
			set
			{
				if ((this._VotingTime != value))
				{
					this.OnVotingTimeChanging(value);
					this.SendPropertyChanging();
					this._VotingTime = value;
					this.SendPropertyChanged("VotingTime");
					this.OnVotingTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Party", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Party
		{
			get
			{
				return this._Party;
			}
			set
			{
				if ((this._Party != value))
				{
					this.OnPartyChanging(value);
					this.SendPropertyChanging();
					this._Party = value;
					this.SendPropertyChanged("Party");
					this.OnPartyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VotingSign", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string VotingSign
		{
			get
			{
				return this._VotingSign;
			}
			set
			{
				if ((this._VotingSign != value))
				{
					this.OnVotingSignChanging(value);
					this.SendPropertyChanging();
					this._VotingSign = value;
					this.SendPropertyChanged("VotingSign");
					this.OnVotingSignChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
